import React, { useState } from 'react';

// Mock data for digital products
const digitalProducts = [
  {
    id: 1,
    name: "كتاب إلكتروني: فن التصميم الرقمي",
    category: "كتب إلكترونية",
    price: 29.99,
    image: "https://placehold.co/400x300/1F2937/FFFFFF?text=E-Book",
    description: "دليلك الشامل لإتقان فن التصميم الرقمي، من الأساسيات إلى التقنيات المتقدمة.",
  },
  {
    id: 2,
    name: "ترخيص برنامج تحرير الفيديو برو",
    category: "برامج",
    price: 199.00,
    image: "https://placehold.co/400x300/1F2937/FFFFFF?text=Software",
    description: "ترخيص مدى الحياة لأقوى برنامج لتحرير الفيديو مع تحديثات مجانية.",
  },
  {
    id: 3,
    name: "حزمة أيقونات ثلاثية الأبعاد",
    category: "أصول تصميم",
    price: 49.50,
    image: "https://placehold.co/400x300/1F2937/FFFFFF?text=3D+Icons",
    description: "مجموعة فريدة من الأيقونات ثلاثية الأبعاد عالية الجودة لمشاريعك.",
  },
  {
    id: 4,
    name: "دورة تدريبية: التسويق الرقمي المتقدم",
    category: "دورات",
    price: 149.99,
    image: "https://placehold.co/400x300/1F2937/FFFFFF?text=Course",
    description: "تعلم استراتيجيات التسويق الرقمي التي ستنقل عملك إلى المستوى التالي.",
  },
  {
    id: 5,
    name: "قالب موقع إلكتروني احترافي",
    category: "قوالب",
    price: 75.00,
    image: "https://placehold.co/400x300/1F2937/FFFFFF?text=Template",
    description: "قالب جاهز للاستخدام، متجاوب وجميل لموقعك الإلكتروني الجديد.",
  },
  {
    id: 6,
    name: "موسيقى تصويرية خالية من حقوق الملكية",
    category: "صوتيات",
    price: 19.99,
    image: "https://placehold.co/400x300/1F2937/FFFFFF?text=Audio",
    description: "مجموعة من المقطوعات الموسيقية الأصلية لمشاريعك الإبداعية.",
  },
];

// Product Card Component
const ProductCard = ({ product, onProductClick, onAddToCart }) => (
  <div
    className="bg-gray-800 rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 ease-in-out transform hover:-translate-y-2 cursor-pointer border border-gray-700 overflow-hidden"
    onClick={() => onProductClick(product)}
  >
    <img
      src={product.image}
      alt={product.name}
      className="w-full h-48 object-cover rounded-t-xl"
      onError={(e) => { e.target.onerror = null; e.target.src="https://placehold.co/400x300/1F2937/FFFFFF?text=Digital+Product"; }}
    />
    <div className="p-5 text-center">
      <h3 className="text-xl font-semibold text-white mb-2">{product.name}</h3>
      <p className="text-gray-400 text-sm mb-3">{product.category}</p>
      <div className="flex justify-between items-center mt-4">
        <span className="text-blue-400 text-2xl font-bold">{product.price.toFixed(2)} ر.س</span>
        <button
          onClick={(e) => { e.stopPropagation(); onAddToCart(product); }} // Stop propagation to prevent modal from opening
          className="bg-gradient-to-r from-purple-600 to-indigo-600 text-white px-5 py-2 rounded-full font-medium hover:from-purple-700 hover:to-indigo-700 transition duration-300 ease-in-out transform hover:scale-105 shadow-md"
        >
          أضف إلى السلة
        </button>
      </div>
    </div>
  </div>
);

// Product Detail Modal Component
const ProductDetailModal = ({ product, onClose, onAddToCart }) => {
  if (!product) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50 p-4">
      <div className="bg-gray-800 rounded-2xl shadow-2xl p-8 max-w-2xl w-full relative border border-gray-700 transform scale-95 animate-scaleIn">
        <button
          onClick={onClose}
          className="absolute top-4 left-4 text-gray-400 hover:text-white transition-colors duration-200"
        >
          <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
        <div className="flex flex-col md:flex-row gap-6 items-center">
          <img
            src={product.image}
            alt={product.name}
            className="w-full md:w-1/2 h-64 object-cover rounded-lg shadow-md"
            onError={(e) => { e.target.onerror = null; e.target.src="https://placehold.co/400x300/1F2937/FFFFFF?text=Digital+Product"; }}
          />
          <div className="flex-1 text-right">
            <h2 className="text-3xl font-bold text-white mb-3">{product.name}</h2>
            <p className="text-gray-400 text-lg mb-4">{product.description}</p>
            <p className="text-blue-400 text-4xl font-extrabold mb-6">{product.price.toFixed(2)} ر.س</p>
            <button
              onClick={() => { onAddToCart(product); onClose(); }} // Add to cart and close modal
              className="w-full bg-gradient-to-r from-green-500 to-teal-500 text-white px-8 py-4 rounded-full text-xl font-bold hover:from-green-600 hover:to-teal-600 transition duration-300 ease-in-out transform hover:scale-105 shadow-lg"
            >
              شراء الآن
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

// Home Page Component
const HomePage = () => (
  <section className="relative h-96 flex items-center justify-center text-center px-4 overflow-hidden rounded-b-3xl">
    <div className="absolute inset-0 bg-cover bg-center opacity-30" style={{ backgroundImage: "url('https://placehold.co/1920x1080/000000/FFFFFF?text=Digital+Background')" }}></div>
    <div className="relative z-10">
      <h1 className="text-5xl md:text-6xl font-extrabold text-white mb-4 leading-tight drop-shadow-lg">
        اكتشف عالم المنتجات <span className="text-blue-400">الرقمية</span>
      </h1>
      <p className="text-xl md:text-2xl text-gray-300 mb-8 drop-shadow-md">
        كل ما تحتاجه لتطوير مهاراتك وأعمالك في مكان واحد.
      </p>
      <button className="bg-gradient-to-r from-teal-500 to-green-500 text-white px-10 py-4 rounded-full text-xl font-bold hover:from-teal-600 hover:to-green-600 transition duration-300 ease-in-out transform hover:scale-105 shadow-xl">
        تصفح المنتجات
      </button>
    </div>
  </section>
);

// Products Page Component
const ProductsPage = ({ products, onProductClick, onAddToCart }) => (
  <section className="py-16 px-4 md:px-8 max-w-6xl mx-auto">
    <h2 className="text-4xl font-bold text-center text-white mb-12 drop-shadow-lg">منتجاتنا المميزة</h2>
    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
      {products.map((product) => (
        <ProductCard key={product.id} product={product} onProductClick={onProductClick} onAddToCart={onAddToCart} />
      ))}
    </div>
  </section>
);

// About Us Page Component
const AboutUsPage = () => (
  <section className="py-16 px-4 md:px-8 max-w-4xl mx-auto text-center">
    <h2 className="text-4xl font-bold text-white mb-8 drop-shadow-lg">من نحن</h2>
    <p className="text-lg text-gray-300 leading-relaxed mb-6">
      نحن متجر الرقميات، وجهتك الأولى للمنتجات الرقمية عالية الجودة. نؤمن بأن الوصول إلى الأدوات والمعرفة الرقمية يجب أن يكون سهلاً ومتاحًا للجميع. مهمتنا هي تمكين الأفراد والشركات من خلال توفير مجموعة واسعة من الكتب الإلكترونية، البرامج، أصول التصميم، الدورات التدريبية، والمزيد.
    </p>
    <p className="text-lg text-gray-300 leading-relaxed">
      نسعى جاهدين لتقديم تجربة تسوق سلسة ومنتجات تلبي أعلى معايير الجودة والابتكار. فريقنا مكرس لدعمك في رحلتك الرقمية، وتقديم كل ما تحتاجه لتزدهر في عالم اليوم المتغير باستمرار.
    </p>
  </section>
);

// Contact Us Page Component
const ContactUsPage = () => (
  <section className="py-16 px-4 md:px-8 max-w-4xl mx-auto">
    <h2 className="text-4xl font-bold text-center text-white mb-8 drop-shadow-lg">اتصل بنا</h2>
    <div className="bg-gray-800 rounded-xl shadow-2xl p-8 border border-gray-700">
      <p className="text-lg text-gray-300 text-center mb-6">
        يسعدنا التواصل معكم! لأي استفسارات أو دعم، يرجى ملء النموذج أدناه أو استخدام معلومات الاتصال المباشرة.
      </p>
      <form className="space-y-6">
        <div>
          <label htmlFor="name" className="block text-gray-300 text-lg font-medium mb-2">الاسم الكامل</label>
          <input
            type="text"
            id="name"
            className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
            placeholder="أدخل اسمك"
          />
        </div>
        <div>
          <label htmlFor="email" className="block text-gray-300 text-lg font-medium mb-2">البريد الإلكتروني</label>
          <input
            type="email"
            id="email"
            className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
            placeholder="أدخل بريدك الإلكتروني"
          />
        </div>
        <div>
          <label htmlFor="message" className="block text-gray-300 text-lg font-medium mb-2">رسالتك</label>
          <textarea
            id="message"
            rows="5"
            className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
            placeholder="اكتب رسالتك هنا..."
          ></textarea>
        </div>
        <button
          type="submit"
          className="w-full bg-gradient-to-r from-purple-600 to-indigo-600 text-white px-8 py-4 rounded-full text-xl font-bold hover:from-purple-700 hover:to-indigo-700 transition duration-300 ease-in-out transform hover:scale-105 shadow-lg"
        >
          إرسال الرسالة
        </button>
      </form>
      <div className="mt-8 text-center text-gray-400">
        <p>أو اتصل بنا مباشرة على:</p>
        <p className="text-white text-xl font-semibold mt-2">info@digitalstore.com | +966 50 123 4567</p>
      </div>
    </div>
  </section>
);

// Cart Page Component
const CartPage = ({ cartItems, onRemoveFromCart, onProceedToCheckout }) => {
  const total = cartItems.reduce((sum, item) => sum + item.price, 0);

  return (
    <section className="py-16 px-4 md:px-8 max-w-4xl mx-auto">
      <h2 className="text-4xl font-bold text-center text-white mb-12 drop-shadow-lg">سلة التسوق</h2>
      {cartItems.length === 0 ? (
        <div className="bg-gray-800 rounded-xl shadow-2xl p-8 text-center border border-gray-700">
          <p className="text-xl text-gray-300">سلة التسوق فارغة.</p>
          <p className="text-lg text-gray-400 mt-2">ابدأ بالتسوق لإضافة منتجاتك المفضلة!</p>
        </div>
      ) : (
        <div className="bg-gray-800 rounded-xl shadow-2xl p-8 border border-gray-700">
          {cartItems.map((item) => (
            <div key={item.cartId} className="flex items-center justify-between border-b border-gray-700 py-4 last:border-b-0">
              <div className="flex items-center gap-4">
                <img
                  src={item.image}
                  alt={item.name}
                  className="w-20 h-20 object-cover rounded-lg shadow-md"
                  onError={(e) => { e.target.onerror = null; e.target.src="https://placehold.co/80x80/1F2937/FFFFFF?text=Product"; }}
                />
                <div>
                  <h3 className="text-xl font-semibold text-white">{item.name}</h3>
                  <p className="text-gray-400 text-sm">{item.category}</p>
                </div>
              </div>
              <div className="flex items-center gap-6">
                <span className="text-blue-400 text-xl font-bold">{item.price.toFixed(2)} ر.س</span>
                <button
                  onClick={() => onRemoveFromCart(item.cartId)}
                  className="bg-red-600 text-white p-2 rounded-full hover:bg-red-700 transition duration-200 transform hover:scale-110"
                >
                  <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fillRule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 000-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm6 0a1 1 0 11-2 0v6a1 1 0 112 0V8z" clipRule="evenodd"></path>
                  </svg>
                </button>
              </div>
            </div>
          ))}
          <div className="flex justify-between items-center mt-8 pt-4 border-t border-gray-700">
            <span className="text-white text-2xl font-bold">الإجمالي:</span>
            <span className="text-blue-400 text-3xl font-extrabold">{total.toFixed(2)} ر.س</span>
          </div>
          <button
            onClick={onProceedToCheckout}
            className="w-full bg-gradient-to-r from-green-500 to-teal-500 text-white px-8 py-4 rounded-full text-xl font-bold hover:from-green-600 hover:to-teal-600 transition duration-300 ease-in-out transform hover:scale-105 shadow-lg mt-6"
          >
            متابعة الدفع
          </button>
        </div>
      )}
    </section>
  );
};

// Checkout Page Component
const CheckoutPage = ({ cartItems, onPlaceOrder, onBackToCart }) => {
  const total = cartItems.reduce((sum, item) => sum + item.price, 0);
  const [formData, setFormData] = useState({
    fullName: '',
    email: '',
    address: '',
    city: '',
    zip: '',
    cardNumber: '',
    expiryDate: '',
    cvv: ''
  });

  const handleChange = (e) => {
    const { id, value } = e.target;
    setFormData((prevData) => ({ ...prevData, [id]: value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // In a real application, you would send formData to a payment gateway
    console.log("Order placed with data:", formData, "and items:", cartItems);
    onPlaceOrder(); // Call the function to simulate order placement and clear cart
  };

  return (
    <section className="py-16 px-4 md:px-8 max-w-4xl mx-auto">
      <h2 className="text-4xl font-bold text-center text-white mb-12 drop-shadow-lg">صفحة الدفع</h2>
      <div className="bg-gray-800 rounded-xl shadow-2xl p-8 border border-gray-700 flex flex-col lg:flex-row gap-8">
        {/* Order Summary */}
        <div className="lg:w-1/2">
          <h3 className="text-2xl font-bold text-white mb-6 border-b border-gray-700 pb-4">ملخص الطلب</h3>
          {cartItems.length === 0 ? (
            <p className="text-lg text-gray-300">سلة التسوق فارغة.</p>
          ) : (
            <div className="space-y-4">
              {cartItems.map((item) => (
                <div key={item.cartId} className="flex justify-between items-center text-gray-300">
                  <span>{item.name}</span>
                  <span>{item.price.toFixed(2)} ر.س</span>
                </div>
              ))}
              <div className="flex justify-between items-center text-white text-2xl font-bold pt-4 border-t border-gray-700">
                <span>الإجمالي:</span>
                <span className="text-blue-400">{total.toFixed(2)} ر.س</span>
              </div>
            </div>
          )}
          <button
            onClick={onBackToCart}
            className="w-full bg-gray-700 text-white px-6 py-3 rounded-full text-lg font-medium hover:bg-gray-600 transition duration-300 ease-in-out transform hover:scale-105 shadow-md mt-6"
          >
            العودة إلى السلة
          </button>
        </div>

        {/* Payment and Shipping Form */}
        <div className="lg:w-1/2">
          <h3 className="text-2xl font-bold text-white mb-6 border-b border-gray-700 pb-4">معلومات الدفع والشحن</h3>
          <form onSubmit={handleSubmit} className="space-y-6">
            {/* Shipping Information */}
            <div>
              <label htmlFor="fullName" className="block text-gray-300 text-lg font-medium mb-2">الاسم الكامل</label>
              <input type="text" id="fullName" value={formData.fullName} onChange={handleChange}
                className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="أدخل اسمك الكامل" required />
            </div>
            <div>
              <label htmlFor="email" className="block text-gray-300 text-lg font-medium mb-2">البريد الإلكتروني</label>
              <input type="email" id="email" value={formData.email} onChange={handleChange}
                className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="أدخل بريدك الإلكتروني" required />
            </div>
            <div>
              <label htmlFor="address" className="block text-gray-300 text-lg font-medium mb-2">العنوان</label>
              <input type="text" id="address" value={formData.address} onChange={handleChange}
                className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="أدخل عنوان الشارع" required />
            </div>
            <div className="flex gap-4">
              <div className="flex-1">
                <label htmlFor="city" className="block text-gray-300 text-lg font-medium mb-2">المدينة</label>
                <input type="text" id="city" value={formData.city} onChange={handleChange}
                  className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="أدخل المدينة" required />
              </div>
              <div className="flex-1">
                <label htmlFor="zip" className="block text-gray-300 text-lg font-medium mb-2">الرمز البريدي</label>
                <input type="text" id="zip" value={formData.zip} onChange={handleChange}
                  className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="أدخل الرمز البريدي" required />
              </div>
            </div>

            {/* Payment Information */}
            <h4 className="text-xl font-bold text-white mt-8 mb-4">معلومات الدفع</h4>
            <div>
              <label htmlFor="cardNumber" className="block text-gray-300 text-lg font-medium mb-2">رقم البطاقة</label>
              <input type="text" id="cardNumber" value={formData.cardNumber} onChange={handleChange}
                className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="XXXX-XXXX-XXXX-XXXX" required />
            </div>
            <div className="flex gap-4">
              <div className="flex-1">
                <label htmlFor="expiryDate" className="block text-gray-300 text-lg font-medium mb-2">تاريخ الانتهاء</label>
                <input type="text" id="expiryDate" value={formData.expiryDate} onChange={handleChange}
                  className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="MM/YY" required />
              </div>
              <div className="flex-1">
                <label htmlFor="cvv" className="block text-gray-300 text-lg font-medium mb-2">CVV</label>
                <input type="text" id="cvv" value={formData.cvv} onChange={handleChange}
                  className="w-full p-4 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="XXX" required />
              </div>
            </div>

            <button
              type="submit"
              className="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-4 rounded-full text-xl font-bold hover:from-blue-700 hover:to-purple-700 transition duration-300 ease-in-out transform hover:scale-105 shadow-lg mt-6"
            >
              إتمام الشراء
            </button>
          </form>
        </div>
      </div>
    </section>
  );
};


// Main App Component
const App = () => {
  const [selectedProduct, setSelectedProduct] = useState(null);
  const [currentPage, setCurrentPage] = useState('home'); // State to manage current page
  const [cartItems, setCartItems] = useState([]); // State to manage items in the cart

  const handleProductClick = (product) => {
    setSelectedProduct(product);
  };

  const handleCloseModal = () => {
    setSelectedProduct(null);
  };

  const handleAddToCart = (product) => {
    // Check if item already in cart (for simplicity, we'll just add it again)
    // In a real app, you might increment quantity or prevent duplicates
    setCartItems((prevItems) => [...prevItems, { ...product, cartId: Date.now() + Math.random() }]); // Add unique cartId
  };

  const handleRemoveFromCart = (cartId) => {
    setCartItems((prevItems) => prevItems.filter((item) => item.cartId !== cartId));
  };

  const handleProceedToCheckout = () => {
    setCurrentPage('checkout');
  };

  const handlePlaceOrder = () => {
    // Simulate order placement
    alert('تم إتمام طلبك بنجاح! شكرًا لك على الشراء.'); // Using alert for simplicity, replace with custom modal
    setCartItems([]); // Clear cart after order
    setCurrentPage('home'); // Go back to home page
  };

  const handleBackToCart = () => {
    setCurrentPage('cart');
  };


  // Function to render the current page component
  const renderPage = () => {
    switch (currentPage) {
      case 'home':
        return <HomePage />;
      case 'products':
        return <ProductsPage products={digitalProducts} onProductClick={handleProductClick} onAddToCart={handleAddToCart} />;
      case 'about':
        return <AboutUsPage />;
      case 'contact':
        return <ContactUsPage />;
      case 'cart':
        return <CartPage cartItems={cartItems} onRemoveFromCart={handleRemoveFromCart} onProceedToCheckout={handleProceedToCheckout} />;
      case 'checkout':
        return <CheckoutPage cartItems={cartItems} onPlaceOrder={handlePlaceOrder} onBackToCart={handleBackToCart} />;
      default:
        return <HomePage />;
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-950 to-black text-white font-sans" dir="rtl">
      {/* Meta viewport for responsive design on mobile devices */}
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <script src="https://cdn.tailwindcss.com"></script>
      <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800&display=swap" rel="stylesheet" />
      <style>
        {`
          body {
            font-family: 'Inter', sans-serif;
          }
          .animate-scaleIn {
            animation: scaleIn 0.3s ease-out forwards;
          }
          @keyframes scaleIn {
            from { transform: scale(0.9); opacity: 0; }
            to { transform: scale(1); opacity: 1; }
          }
        `}
      </style>

      {/* Header */}
      <header className="bg-gray-900 shadow-lg py-5 px-8 flex justify-between items-center rounded-b-3xl">
        <div className="text-3xl font-extrabold text-white">
          <span className="text-blue-400">متجر</span>
          <span className="text-purple-400">الرقميات</span>
        </div>
        <nav className="hidden md:flex gap-8 text-lg font-medium">
          <a href="#" onClick={() => setCurrentPage('home')} className={`transition-colors duration-200 ${currentPage === 'home' ? 'text-blue-400 font-bold' : 'text-gray-300 hover:text-white'}`}>الرئيسية</a>
          <a href="#" onClick={() => setCurrentPage('products')} className={`transition-colors duration-200 ${currentPage === 'products' ? 'text-blue-400 font-bold' : 'text-gray-300 hover:text-white'}`}>المنتجات</a>
          <a href="#" onClick={() => setCurrentPage('about')} className={`transition-colors duration-200 ${currentPage === 'about' ? 'text-blue-400 font-bold' : 'text-gray-300 hover:text-white'}`}>من نحن</a>
          <a href="#" onClick={() => setCurrentPage('contact')} className={`transition-colors duration-200 ${currentPage === 'contact' ? 'text-blue-400 font-bold' : 'text-gray-300 hover:text-white'}`}>اتصل بنا</a>
        </nav>
        <div className="flex items-center gap-4">
          <button
            onClick={() => setCurrentPage('cart')}
            className="relative p-2 rounded-full bg-gray-800 hover:bg-gray-700 transition-colors duration-200 shadow-md"
          >
            <svg className="w-7 h-7 text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
              <path d="M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553L16.5 4H5.455L5 2H3zM6 16a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"></path>
            </svg>
            {cartItems.length > 0 && (
              <span className="absolute top-0 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-100 bg-red-600 rounded-full">
                {cartItems.length}
              </span>
            )}
          </button>
        </div>
      </header>

      {/* Render current page content */}
      {renderPage()}

      {/* Footer */}
      <footer className="bg-gray-900 py-8 px-8 text-center rounded-t-3xl border-t border-gray-700 mt-auto">
        <p className="text-gray-400 text-lg mb-4">
          &copy; {new Date().getFullYear()} متجر الرقميات. جميع الحقوق محفوظة.
        </p>
        <div className="flex justify-center gap-6">
          <a href="#" className="text-gray-400 hover:text-white transition-colors duration-200">
            <svg className="w-7 h-7" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path fillRule="evenodd" d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33V22C18.343 21.128 22 16.991 22 12z" clipRule="evenodd" />
            </svg>
          </a>
          <a href="#" className="text-gray-400 hover:text-white transition-colors duration-200">
            <svg className="w-7 h-7" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path fillRule="evenodd" d="M12.315 2.417a.75.75 0 01.07.867 12.65 12.65 0 00-1.744 3.754.75.75 0 01-1.18.275 11.26 11.26 0 01-3.694-2.853.75.75 0 01-.192-.924c.14-.304.48-.485.877-.485h.003c.205 0 .408.04.606.118.23.092.447.214.65.36.203.146.39.317.56.51.17.193.32.403.45.63.13.227.24.468.33.722a.75.75 0 01-1.45.37c-.08-.25-.18-.506-.29-.767-.11-.26-.23-.517-.36-.767-.13-.25-.26-.49-.4-.71-.14-.22-.29-.42-.45-.6-.16-.18-.33-.34-.5-.48-.17-.14-.35-.26-.54-.36-.19-.1-.39-.17-.6-.22-.21-.05-.42-.08-.64-.08h-.003c-1.15 0-2.19.78-2.58 1.95-.39 1.17-.11 2.42.71 3.42.82 1 1.94 1.7 3.25 2.05.78.21 1.6.31 2.43.31.83 0 1.65-.1 2.43-.31 1.31-.35 2.43-1.05 3.25-2.05.82-1 1.09-2.25.71-3.42-.39-1.17-1.43-1.95-2.58-1.95zM12 2c-5.523 0-10 4.477-10 10s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z" clipRule="evenodd" />
            </svg>
          </a>
          <a href="#" className="text-gray-400 hover:text-white transition-colors duration-200">
            <svg className="w-7 h-7" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path fillRule="evenodd" d="M12 2C6.477 2 2 6.477 2 12c0 4.42 2.866 8.16 6.84 9.504.5.09.68-.217.68-.483v-1.69c-2.78.604-3.37-.935-3.37-.935-.455-1.157-1.11-1.465-1.11-1.465-.91-.62.07-.607.07-.607 1.004.07 1.532 1.03 1.532 1.03.89 1.53 2.34 1.087 2.91.83.09-.64.35-1.087.64-1.337-2.22-.25-4.55-1.11-4.55-4.94 0-1.09.39-1.98 1.03-2.68-.1-.25-.45-1.27.1-2.65 0 0 .84-.27 2.75 1.025.79-.22 1.63-.33 2.47-.33.84 0 1.68.11 2.47.33 1.91-1.295 2.75-1.025 2.75-1.025.55 1.38.2 2.4.1 2.65.64.7 1.03 1.59 1.03 2.68 0 3.84-2.33 4.68-4.56 4.94.36.31.68.92.68 1.85v2.74c0 .267.18.573.68.484C20.134 20.16 23 16.42 23 12c0-5.523-4.477-10-10-10z" clipRule="evenodd" />
            </svg>
          </a>
        </div>
      </footer>

      {/* Product Detail Modal */}
      <ProductDetailModal product={selectedProduct} onClose={handleCloseModal} onAddToCart={handleAddToCart} />
    </div>
  );
};

export default App;
